// Code generated by go-swagger; DO NOT EDIT.

package content_selectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/030/n3dr/internal/app/n3dr/goswagger/models"
)

// GetContentSelectorsReader is a Reader for the GetContentSelectors structure.
type GetContentSelectorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentSelectorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentSelectorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetContentSelectorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContentSelectorsOK creates a GetContentSelectorsOK with default headers values
func NewGetContentSelectorsOK() *GetContentSelectorsOK {
	return &GetContentSelectorsOK{}
}

/* GetContentSelectorsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetContentSelectorsOK struct {
	Payload []*models.ContentSelectorAPIResponse
}

func (o *GetContentSelectorsOK) Error() string {
	return fmt.Sprintf("[GET /v1/security/content-selectors][%d] getContentSelectorsOK  %+v", 200, o.Payload)
}
func (o *GetContentSelectorsOK) GetPayload() []*models.ContentSelectorAPIResponse {
	return o.Payload
}

func (o *GetContentSelectorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentSelectorsForbidden creates a GetContentSelectorsForbidden with default headers values
func NewGetContentSelectorsForbidden() *GetContentSelectorsForbidden {
	return &GetContentSelectorsForbidden{}
}

/* GetContentSelectorsForbidden describes a response with status code 403, with default header values.

Insufficient permissions to read content selectors
*/
type GetContentSelectorsForbidden struct {
}

func (o *GetContentSelectorsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/content-selectors][%d] getContentSelectorsForbidden ", 403)
}

func (o *GetContentSelectorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
