// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRepository18Reader is a Reader for the UpdateRepository18 structure.
type UpdateRepository18Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRepository18Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRepository18NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRepository18Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRepository18Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRepository18NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRepository18NoContent creates a UpdateRepository18NoContent with default headers values
func NewUpdateRepository18NoContent() *UpdateRepository18NoContent {
	return &UpdateRepository18NoContent{}
}

/* UpdateRepository18NoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRepository18NoContent struct {
}

func (o *UpdateRepository18NoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] updateRepository18NoContent ", 204)
}

func (o *UpdateRepository18NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository18Unauthorized creates a UpdateRepository18Unauthorized with default headers values
func NewUpdateRepository18Unauthorized() *UpdateRepository18Unauthorized {
	return &UpdateRepository18Unauthorized{}
}

/* UpdateRepository18Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRepository18Unauthorized struct {
}

func (o *UpdateRepository18Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] updateRepository18Unauthorized ", 401)
}

func (o *UpdateRepository18Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository18Forbidden creates a UpdateRepository18Forbidden with default headers values
func NewUpdateRepository18Forbidden() *UpdateRepository18Forbidden {
	return &UpdateRepository18Forbidden{}
}

/* UpdateRepository18Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRepository18Forbidden struct {
}

func (o *UpdateRepository18Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] updateRepository18Forbidden ", 403)
}

func (o *UpdateRepository18Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRepository18NotFound creates a UpdateRepository18NotFound with default headers values
func NewUpdateRepository18NotFound() *UpdateRepository18NotFound {
	return &UpdateRepository18NotFound{}
}

/* UpdateRepository18NotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateRepository18NotFound struct {
}

func (o *UpdateRepository18NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/docker/hosted/{repositoryName}][%d] updateRepository18NotFound ", 404)
}

func (o *UpdateRepository18NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
