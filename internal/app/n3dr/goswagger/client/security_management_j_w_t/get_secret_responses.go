// Code generated by go-swagger; DO NOT EDIT.

package security_management_j_w_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSecretReader is a Reader for the GetSecret structure.
type GetSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 401:
		result := NewGetSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSecretUnauthorized creates a GetSecretUnauthorized with default headers values
func NewGetSecretUnauthorized() *GetSecretUnauthorized {
	return &GetSecretUnauthorized{}
}

/* GetSecretUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type GetSecretUnauthorized struct {
}

func (o *GetSecretUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/security/jwt][%d] getSecretUnauthorized ", 401)
}

func (o *GetSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretForbidden creates a GetSecretForbidden with default headers values
func NewGetSecretForbidden() *GetSecretForbidden {
	return &GetSecretForbidden{}
}

/* GetSecretForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type GetSecretForbidden struct {
}

func (o *GetSecretForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/security/jwt][%d] getSecretForbidden ", 403)
}

func (o *GetSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretNotFound creates a GetSecretNotFound with default headers values
func NewGetSecretNotFound() *GetSecretNotFound {
	return &GetSecretNotFound{}
}

/* GetSecretNotFound describes a response with status code 404, with default header values.

Secret is not found
*/
type GetSecretNotFound struct {
}

func (o *GetSecretNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/security/jwt][%d] getSecretNotFound ", 404)
}

func (o *GetSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
