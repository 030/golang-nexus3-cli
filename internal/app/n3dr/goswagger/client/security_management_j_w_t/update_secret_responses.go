// Code generated by go-swagger; DO NOT EDIT.

package security_management_j_w_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateSecretReader is a Reader for the UpdateSecret structure.
type UpdateSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 401:
		result := NewUpdateSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSecretUnauthorized creates a UpdateSecretUnauthorized with default headers values
func NewUpdateSecretUnauthorized() *UpdateSecretUnauthorized {
	return &UpdateSecretUnauthorized{}
}

/* UpdateSecretUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateSecretUnauthorized struct {
}

func (o *UpdateSecretUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/security/jwt][%d] updateSecretUnauthorized ", 401)
}

func (o *UpdateSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSecretForbidden creates a UpdateSecretForbidden with default headers values
func NewUpdateSecretForbidden() *UpdateSecretForbidden {
	return &UpdateSecretForbidden{}
}

/* UpdateSecretForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateSecretForbidden struct {
}

func (o *UpdateSecretForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/security/jwt][%d] updateSecretForbidden ", 403)
}

func (o *UpdateSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
