// Code generated by go-swagger; DO NOT EDIT.

package security_management_privileges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePrivilegeReader is a Reader for the DeletePrivilege structure.
type DeletePrivilegeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePrivilegeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeletePrivilegeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePrivilegeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePrivilegeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePrivilegeBadRequest creates a DeletePrivilegeBadRequest with default headers values
func NewDeletePrivilegeBadRequest() *DeletePrivilegeBadRequest {
	return &DeletePrivilegeBadRequest{}
}

/* DeletePrivilegeBadRequest describes a response with status code 400, with default header values.

The privilege is internal and may not be altered.
*/
type DeletePrivilegeBadRequest struct {
}

func (o *DeletePrivilegeBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/privileges/{privilegeName}][%d] deletePrivilegeBadRequest ", 400)
}

func (o *DeletePrivilegeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePrivilegeForbidden creates a DeletePrivilegeForbidden with default headers values
func NewDeletePrivilegeForbidden() *DeletePrivilegeForbidden {
	return &DeletePrivilegeForbidden{}
}

/* DeletePrivilegeForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the operation.
*/
type DeletePrivilegeForbidden struct {
}

func (o *DeletePrivilegeForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/privileges/{privilegeName}][%d] deletePrivilegeForbidden ", 403)
}

func (o *DeletePrivilegeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePrivilegeNotFound creates a DeletePrivilegeNotFound with default headers values
func NewDeletePrivilegeNotFound() *DeletePrivilegeNotFound {
	return &DeletePrivilegeNotFound{}
}

/* DeletePrivilegeNotFound describes a response with status code 404, with default header values.

Privilege not found in the system.
*/
type DeletePrivilegeNotFound struct {
}

func (o *DeletePrivilegeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/privileges/{privilegeName}][%d] deletePrivilegeNotFound ", 404)
}

func (o *DeletePrivilegeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
