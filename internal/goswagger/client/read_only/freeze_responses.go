// Code generated by goswagger; DO NOT EDIT.

package read_only

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// FreezeReader is a Reader for the Freeze structure.
type FreezeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FreezeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewFreezeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewFreezeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFreezeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFreezeNoContent creates a FreezeNoContent with default headers values
func NewFreezeNoContent() *FreezeNoContent {
	return &FreezeNoContent{}
}

/* FreezeNoContent describes a response with status code 204, with default header values.

System is now read-only
*/
type FreezeNoContent struct {
}

func (o *FreezeNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/freeze][%d] freezeNoContent ", 204)
}

func (o *FreezeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFreezeForbidden creates a FreezeForbidden with default headers values
func NewFreezeForbidden() *FreezeForbidden {
	return &FreezeForbidden{}
}

/* FreezeForbidden describes a response with status code 403, with default header values.

Authentication required
*/
type FreezeForbidden struct {
}

func (o *FreezeForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/freeze][%d] freezeForbidden ", 403)
}

func (o *FreezeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFreezeNotFound creates a FreezeNotFound with default headers values
func NewFreezeNotFound() *FreezeNotFound {
	return &FreezeNotFound{}
}

/* FreezeNotFound describes a response with status code 404, with default header values.

No change to read-only state
*/
type FreezeNotFound struct {
}

func (o *FreezeNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/read-only/freeze][%d] freezeNotFound ", 404)
}

func (o *FreezeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
