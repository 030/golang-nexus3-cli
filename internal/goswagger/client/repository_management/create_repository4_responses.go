// Code generated by goswagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepository4Reader is a Reader for the CreateRepository4 structure.
type CreateRepository4Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepository4Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepository4Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepository4Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepository4Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateRepository4MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRepository4Created creates a CreateRepository4Created with default headers values
func NewCreateRepository4Created() *CreateRepository4Created {
	return &CreateRepository4Created{}
}

/* CreateRepository4Created describes a response with status code 201, with default header values.

Repository created
*/
type CreateRepository4Created struct {
}

func (o *CreateRepository4Created) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository4Created ", 201)
}

func (o *CreateRepository4Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository4Unauthorized creates a CreateRepository4Unauthorized with default headers values
func NewCreateRepository4Unauthorized() *CreateRepository4Unauthorized {
	return &CreateRepository4Unauthorized{}
}

/* CreateRepository4Unauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRepository4Unauthorized struct {
}

func (o *CreateRepository4Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository4Unauthorized ", 401)
}

func (o *CreateRepository4Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository4Forbidden creates a CreateRepository4Forbidden with default headers values
func NewCreateRepository4Forbidden() *CreateRepository4Forbidden {
	return &CreateRepository4Forbidden{}
}

/* CreateRepository4Forbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRepository4Forbidden struct {
}

func (o *CreateRepository4Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository4Forbidden ", 403)
}

func (o *CreateRepository4Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepository4MethodNotAllowed creates a CreateRepository4MethodNotAllowed with default headers values
func NewCreateRepository4MethodNotAllowed() *CreateRepository4MethodNotAllowed {
	return &CreateRepository4MethodNotAllowed{}
}

/* CreateRepository4MethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type CreateRepository4MethodNotAllowed struct {
}

func (o *CreateRepository4MethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/apt/proxy][%d] createRepository4MethodNotAllowed ", 405)
}

func (o *CreateRepository4MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
