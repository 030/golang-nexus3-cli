// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// InvalidateCacheReader is a Reader for the InvalidateCache structure.
type InvalidateCacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvalidateCacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewInvalidateCacheNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvalidateCacheBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInvalidateCacheUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInvalidateCacheForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvalidateCacheNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInvalidateCacheNoContent creates a InvalidateCacheNoContent with default headers values
func NewInvalidateCacheNoContent() *InvalidateCacheNoContent {
	return &InvalidateCacheNoContent{}
}

/* InvalidateCacheNoContent describes a response with status code 204, with default header values.

Repository cache invalidated
*/
type InvalidateCacheNoContent struct {
}

func (o *InvalidateCacheNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/invalidate-cache][%d] invalidateCacheNoContent ", 204)
}

func (o *InvalidateCacheNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvalidateCacheBadRequest creates a InvalidateCacheBadRequest with default headers values
func NewInvalidateCacheBadRequest() *InvalidateCacheBadRequest {
	return &InvalidateCacheBadRequest{}
}

/* InvalidateCacheBadRequest describes a response with status code 400, with default header values.

Repository is not of proxy or group type
*/
type InvalidateCacheBadRequest struct {
}

func (o *InvalidateCacheBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/invalidate-cache][%d] invalidateCacheBadRequest ", 400)
}

func (o *InvalidateCacheBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvalidateCacheUnauthorized creates a InvalidateCacheUnauthorized with default headers values
func NewInvalidateCacheUnauthorized() *InvalidateCacheUnauthorized {
	return &InvalidateCacheUnauthorized{}
}

/* InvalidateCacheUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type InvalidateCacheUnauthorized struct {
}

func (o *InvalidateCacheUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/invalidate-cache][%d] invalidateCacheUnauthorized ", 401)
}

func (o *InvalidateCacheUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvalidateCacheForbidden creates a InvalidateCacheForbidden with default headers values
func NewInvalidateCacheForbidden() *InvalidateCacheForbidden {
	return &InvalidateCacheForbidden{}
}

/* InvalidateCacheForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type InvalidateCacheForbidden struct {
}

func (o *InvalidateCacheForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/invalidate-cache][%d] invalidateCacheForbidden ", 403)
}

func (o *InvalidateCacheForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvalidateCacheNotFound creates a InvalidateCacheNotFound with default headers values
func NewInvalidateCacheNotFound() *InvalidateCacheNotFound {
	return &InvalidateCacheNotFound{}
}

/* InvalidateCacheNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type InvalidateCacheNotFound struct {
}

func (o *InvalidateCacheNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/{repositoryName}/invalidate-cache][%d] invalidateCacheNotFound ", 404)
}

func (o *InvalidateCacheNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
