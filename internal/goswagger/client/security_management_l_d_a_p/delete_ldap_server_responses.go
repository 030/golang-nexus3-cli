// Code generated by go-swagger; DO NOT EDIT.

package security_management_l_d_a_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteLdapServerReader is a Reader for the DeleteLdapServer structure.
type DeleteLdapServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLdapServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLdapServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteLdapServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLdapServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLdapServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLdapServerNoContent creates a DeleteLdapServerNoContent with default headers values
func NewDeleteLdapServerNoContent() *DeleteLdapServerNoContent {
	return &DeleteLdapServerNoContent{}
}

/* DeleteLdapServerNoContent describes a response with status code 204, with default header values.

LDAP server deleted
*/
type DeleteLdapServerNoContent struct {
}

func (o *DeleteLdapServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/ldap/{name}][%d] deleteLdapServerNoContent ", 204)
}

func (o *DeleteLdapServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLdapServerUnauthorized creates a DeleteLdapServerUnauthorized with default headers values
func NewDeleteLdapServerUnauthorized() *DeleteLdapServerUnauthorized {
	return &DeleteLdapServerUnauthorized{}
}

/* DeleteLdapServerUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type DeleteLdapServerUnauthorized struct {
}

func (o *DeleteLdapServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/ldap/{name}][%d] deleteLdapServerUnauthorized ", 401)
}

func (o *DeleteLdapServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLdapServerForbidden creates a DeleteLdapServerForbidden with default headers values
func NewDeleteLdapServerForbidden() *DeleteLdapServerForbidden {
	return &DeleteLdapServerForbidden{}
}

/* DeleteLdapServerForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type DeleteLdapServerForbidden struct {
}

func (o *DeleteLdapServerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/ldap/{name}][%d] deleteLdapServerForbidden ", 403)
}

func (o *DeleteLdapServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLdapServerNotFound creates a DeleteLdapServerNotFound with default headers values
func NewDeleteLdapServerNotFound() *DeleteLdapServerNotFound {
	return &DeleteLdapServerNotFound{}
}

/* DeleteLdapServerNotFound describes a response with status code 404, with default header values.

LDAP server not found
*/
type DeleteLdapServerNotFound struct {
}

func (o *DeleteLdapServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/security/ldap/{name}][%d] deleteLdapServerNotFound ", 404)
}

func (o *DeleteLdapServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
